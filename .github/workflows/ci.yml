name: Android CI

on:
  push:
    tags-ignore:
      - 'v*'
    branches:
      - 'main'  # 只在主分支触发测试构建
  pull_request:

jobs:
  prepare:
    runs-on: ubuntu-latest
    # 只在非 [release] 时运行
    if: ${{ !(startsWith(github.event.head_commit.message, '[release') || contains(github.event.head_commit.message, 'NoCI')) }}
    outputs:
      build_date: ${{ steps.set-build-date.outputs.build_date }}
    steps:
      - id: set-build-date
        run: |
          echo "build_date=$(date -u +%y.%m.%d)" >> $GITHUB_OUTPUT

  build:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          log-accepted-android-sdk-licenses: false

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Setup APK Signing Key
        if: github.event_name == 'push'
        run: |
          echo ${{ secrets.KEYSTORE }} | base64 --decode > keystore.jks
          echo ${{ secrets.GRADLE_PROPERTIES}} | base64 --decode >> gradle.properties

      - name: Build with Gradle
        run: ./gradlew assembleDebug assembleRelease

      - name: Upload Artifact (Release)
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: app/release/*.apk

      - name: Upload Artifact (Debug)
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk

  prerelease:
    needs: [prepare, build]
    # 只在非PR且是主仓库时运行预发布
    if: github.event_name != 'pull_request' && github.repository == 'chiyuki0325/NEUQRCode'
    runs-on: ubuntu-latest
    env:
      BUILD_DATE: ${{ needs.prepare.outputs.build_date }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: apk/

      - working-directory: apk/
        run: |
          mv */*.apk .
          rm -rf */

      # 删除已存在的beta
      - name: Delete Pre-Release
        run: |
          if gh release view beta &>/dev/null; then
            gh release delete beta -y
          fi
        env:
          GH_TOKEN: ${{ github.token }}

      # beta标签
      - name: Create or update beta tag
        uses: richardsimko/update-tag@v1
        with:
          tag_name: beta
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 发布预发布版本
      - name: Publish Pre-Release
        uses: ncipollo/release-action@v1
        with:
          name: NEUQRCode_${{ env.BUILD_DATE }}
          tag: "beta"
          body: "此为预览版本，可能存在不稳定情况，欢迎随时反馈。\n构建日期：${{ env.BUILD_DATE }}"
          prerelease: true
          artifacts: ${{ github.workspace }}/apk/*.apk
